{"version":3,"file":"component---src-pages-index-js-68912244f6bd654d421e.js","mappings":"0MAyCA,IAAMA,EAAQ,aAmBd,EAlDA,WACE,OACE,gBAAC,KAAD,CACEC,MAAOD,EACPE,OAAQ,SAACC,GACP,MAAgCA,EAAKC,KAAKC,aAAlCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YAChB,OACE,uBACEC,MAAO,CACLC,UAAW,OACXC,aAAc,SAGhB,sBAAIF,MAAO,CAAEE,aAAc,MAA3B,oBACA,sBACEF,MAAO,CACLG,OAAQ,EACRC,SAAU,SAGX,IACAN,EAAQ,KAEX,8BAAMC,EAAN,U,mBCzBNM,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA8DH,OA9DGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJX,OAAA,WACE,IAEMY,EAFWC,KAAKC,MAAdb,KAEeW,UAAUG,MAGjC,OACE,gBAAC,IAAD,CAAQC,SAAUH,KAAKC,MAAME,UAC3B,gBAAC,IAAD,CACEC,MAAM,6BACNC,SAAU,CAAC,YAAD,kDAOZ,gBAAC,EAAD,MACCN,EAAUO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAChB,OACE,uBAAKC,IAAKD,EAAKE,YAAYC,SACzB,sBACEjB,MAAO,CACLE,aAAc,UAGlB,uBACEgB,wBAAyB,CACvBC,OAAQL,EAAKM,cAiC5B,EA9DGf,CAAagB,EAAAA,WAiEnB","sources":["webpack://animysore-website/./src/components/bio.js","webpack://animysore-website/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author, description } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              marginTop: \"5rem\",\n              marginBottom: \"2rem\",\n            }}\n          >\n            <h3 style={{ marginBottom: \"0\" }}> Hi there! I am </h3>\n            <h1\n              style={{\n                margin: 0,\n                fontSize: \"4rem\",\n              }}\n            >\n              {\" \"}\n              {author}{\" \"}\n            </h1>\n            <h3> {description} </h3>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 50, height: 50, layout: FIXED)\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n// import ProjectCard from '../components/card'\n\nclass Home extends React.Component {\n  render() {\n    const { data } = this.props\n\n    const portfolio = data.portfolio.edges\n    // const projects = data.projects.edges\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title=\"Aniruddha Mysore's Website\"\n          keywords={[\n            `aniruddha`,\n            `mysore`,\n            `microsoft research`,\n            `morgan stanley`,\n          ]}\n        />\n        <Bio />\n        {portfolio.map(({ node }) => {\n          return (\n            <div key={node.frontmatter.section}>\n              <h3\n                style={{\n                  marginBottom: \"1rem\",\n                }}\n              ></h3>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: node.html,\n                }}\n              />\n            </div>\n          )\n        })}\n        {/*\n        <h1>Projects</h1> \n        <div style={{ display: 'flex' }}>\n          {projects.map(({ node }) => {\n            let image = node.frontmatter.image.childImageSharp.gatsbyImageData;\n            return (\n                <div key={node.frontmatter.title} style={{ flex: 3, padding: 5 }}>\n                  <ProjectCard image={image}></ProjectCard>\n\n                  <h3\n                    style={{\n                      marginBottom: '1rem',\n                    }}\n                  > {node.frontmatter.title}\n                  </h3>\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: node.html,\n                    }}\n                  />\n                </div>\n            )\n          })}\n        </div>\n        */}\n      </Layout>\n    )\n  }\n}\n\nexport default Home\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n    portfolio: allMarkdownRemark(\n      sort: { fields: [frontmatter___order], order: ASC }\n      filter: { frontmatter: { type: { eq: \"portfolio\" } } }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            section\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"project\" } } }\n    ) {\n      edges {\n        node {\n          html\n          id\n          headings {\n            value\n            depth\n          }\n          frontmatter {\n            title\n            type\n            section\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 800, layout: CONSTRAINED)\n              }\n            }\n          }\n          parent {\n            id\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["bioQuery","query","render","data","site","siteMetadata","author","description","style","marginTop","marginBottom","margin","fontSize","Home","portfolio","this","props","edges","location","title","keywords","map","node","key","frontmatter","section","dangerouslySetInnerHTML","__html","html","React"],"sourceRoot":""}