{"version":3,"file":"component---src-pages-index-js-2edb4c035ac421bf8245.js","mappings":"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","sources":["webpack://animysore-website/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://animysore-website/./node_modules/react-icons/lib/esm/iconContext.js","webpack://animysore-website/./node_modules/react-icons/lib/esm/iconBase.js","webpack://animysore-website/./src/components/social.js","webpack://animysore-website/./src/components/bio.js","webpack://animysore-website/./src/components/card.js","webpack://animysore-website/./src/pages/index.js"],"sourcesContent":["export var IconsManifest = [{\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons 4\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"io5\",\n  \"name\": \"Ionicons 5\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}];","import React from 'react';\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { IconContext, DefaultContext } from './iconContext';\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var attr = props.attr,\n        size = props.size,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + ' ' : '') + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { IoLogoLinkedin, IoLogoGithub, IoLogoTwitter } from \"react-icons/io\"\nimport { rhythm } from \"../utils/typography\"\n\nconst linkstyle = { color: \"black\", background: \"none\" }\n\nfunction Social() {\n  return (\n    <StaticQuery\n      query={socialQuery}\n      render={(data) => {\n        const { twitter, linkedin, github } = data.site.siteMetadata.social\n        return (\n          <div>\n            <div\n              style={{\n                display: `flex`,\n                fontSize: rhythm(1),\n              }}\n            >\n              <a\n                style={linkstyle}\n                href={twitter}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <IoLogoTwitter />\n              </a>\n              <a\n                style={linkstyle}\n                href={linkedin}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <IoLogoLinkedin />\n              </a>\n              <a\n                style={linkstyle}\n                href={github}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <IoLogoGithub />\n              </a>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst socialQuery = graphql`\n  query socialQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 50, height: 50, layout: FIXED)\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n        social {\n          twitter\n          linkedin\n          github\n        }\n      }\n    }\n  }\n`\n\nexport default Social\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Social from \"../components/social\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={(data) => {\n        const { author /* , social */, description } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              marginTop: rhythm(5),\n              marginBottom: rhythm(10),\n            }}\n          >\n            <p>\n              <h1\n                style={{\n                  fontSize: rhythm(2),\n                  fontFamily: `Quicksand, sans-serif`,\n                }}\n              >\n                {\" \"}\n                {author}{\" \"}\n              </h1>\n              <h3> {description} </h3>\n            </p>\n            <div\n              style={{\n                display: `flex`,\n              }}\n            >\n              <Social />\n              {/* <Image\n                fixed={data.avatar.childImageSharp.fixed}\n                alt={author}\n                style={{\n                  marginRight: rhythm(1 / 2),\n                  marginBottom: 0,\n                  minWidth: 50,\n                  borderRadius: `100%`,\n                }}\n                imgStyle={{\n                  borderRadius: `50%`,\n                }}\n              /> */}\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 50, height: 50, layout: FIXED)\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nfunction ProjectCard(props) {\n  return (\n    <>\n      <GatsbyImage image={props.image} />\n    </>\n  )\n}\n\nexport default ProjectCard\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ProjectCard from \"../components/card\"\nimport { rhythm } from \"../utils/typography\"\nimport \"./../style.scss\"\n\nclass Home extends React.Component {\n  render() {\n    const { data } = this.props\n\n    const portfolio = data.portfolio.edges\n    const projects = data.projects.edges\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title=\"Aniruddha Mysore's Website\"\n          keywords={[\n            `aniruddha`,\n            `mysore`,\n            `blog`,\n            `bangalore`,\n            `pesit`,\n            `pesu`,\n            `pes`,\n            `stride`,\n            `gsoc`,\n          ]}\n        />\n        <Bio />\n        {portfolio.map(({ node }) => {\n          return (\n            <div key={node.frontmatter.section}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              ></h3>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: node.html,\n                }}\n              />\n            </div>\n          )\n        })}\n        <h1>Projects</h1>\n        <div className=\"columns\">\n          {projects.map(({ node }) => {\n            let image = node.frontmatter.image.childImageSharp.gatsbyImageData\n            return (\n              <div key={node.frontmatter.title} className=\"column is-one-third\">\n                <ProjectCard image={image}></ProjectCard>\n\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  {\" \"}\n                  {node.frontmatter.title}\n                </h3>\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: node.html,\n                  }}\n                />\n              </div>\n            )\n          })}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Home\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n    portfolio: allMarkdownRemark(\n      sort: { fields: [frontmatter___order], order: DESC }\n      filter: { frontmatter: { type: { eq: \"portfolio\" } } }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            section\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"project\" } } }\n    ) {\n      edges {\n        node {\n          html\n          id\n          headings {\n            value\n            depth\n          }\n          frontmatter {\n            title\n            type\n            section\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 800, layout: CONSTRAINED)\n              }\n            }\n          }\n          parent {\n            id\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","linkstyle","background","socialQuery","query","render","site","siteMetadata","social","twitter","linkedin","github","display","fontSize","rhythm","href","rel","target","bioQuery","author","description","marginTop","marginBottom","fontFamily","G","image","Home","portfolio","edges","projects","location","keywords","frontmatter","section","dangerouslySetInnerHTML","__html","html","childImageSharp","gatsbyImageData","React"],"sourceRoot":""}